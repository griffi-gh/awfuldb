WHITESPACE = _{ (WHITE_SPACE)+ }
COMMENT = _{
  ("/*" ~ (!"*/" ~ ANY)* ~ "*/") |
  ("//" ~ (!(NEWLINE | EOI) ~ ANY)* ~ (NEWLINE| EOI))
}

numeric = _{ ASCII_DIGIT+ }
item = { (ASCII_ALPHANUMERIC | "_")+ }

nil_literal = { "nil" }
bool_literal = { "true" | "false" }
number_literal = { numeric }
string_literal = { "\"" ~ (!"\"" ~ ANY)* ~ "\"" }
literal = _{ number_literal | bool_literal | string_literal | nil_literal }

fn_call = { item ~ "(" ~ expr? ~ ("," ~ expr)* ~ ")" }
op_gt = { ">" }
op_gt_eq = { ">=" }
op_lt = { "<" }
op_lt_eq = { "<=" }
op_eq = { "==" }
op_not_eq = { "!=" }
op_add = { "+" }
op_sub = { "-" }
op_div = { "/" }
op_mul = { "*" }
op_exp = { "^" }
infix = _{
  op_gt | op_gt_eq | op_lt | op_lt_eq | op_eq | op_not_eq |
  op_add | op_sub | op_div | op_mul | op_exp
}
op_neg = { "-" }
op_len = { "#" }
prefix = _{ op_neg | op_len }
primary = _{ literal | fn_call | item | ("(" ~ expr ~ ")") }
infix_expr = { primary ~ infix ~ primary }
prefix_expr = { prefix ~ primary }
expr = { infix_expr | prefix_expr | primary }

expr_list = { "(" ~ expr? ~ ("," ~ expr?)* ~ ")" }

expr_table_item = { item ~ ":" ~ expr }
expr_table = { "{" ~ expr_table_item? ~ ("," ~ expr_table_item?)* ~ "}" }

size = { "[" ~ expr ~ "]" }
type = {
  "u8" | "u16" | "u32" | "u64" |
  "i8" | "i16" | "i32" | "i64" |
  "f32" | "f64" | "text" | "blob"
}
full_type = { type ~ size? ~ "?"? }

// CreateTable test {
// 	name: text[10],
// 	age: u16,
// };
// CreateTable empty;
column_def = { item ~ ":" ~ full_type }
column_def_list = { ("{" ~ column_def? ~ ("," ~ column_def?)* ~ "}")* }
create_table = { "CreateTable" ~ item ~ column_def_list? }

// DropTable test;
drop_table = { "DropTable" ~ item }

// InsertInto test {
//   name: "Adam",
//   age: 17,
// };
// InsertInto test ("Adam", 17);
insert_into = { "InsertInto" ~ item ~ (expr_list | expr_table) }

// Var x = y + 5;
var_set = { "Var" ~ item ~ ":" ~ full_type  ~ "=" ~ expr }

// If x {
//   ...
// }
if_block = { "If" ~ expr ~ "{" ~ statement* ~ "}"}

statement = { (create_table | drop_table | insert_into | if_block | var_set) ~ ";" }

query = { SOI ~ statement* ~ EOI }
